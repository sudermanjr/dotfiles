# set aliases
alias d=docker
complete -F _docker d

eval "$(hub alias -s)"
alias gitci="git ci-status -v"
waitci(){
  until git ci-status -v; do
    echo "------------------------------------------------"
    sleep 5
  done
  echo "Finished."
}

# https://unix.stackexchange.com/questions/25327/watch-command-alias-expansion
alias watch='watch -xc '

#Disk space
alias du='du -kh'    # Makes a more readable output.
alias df='df -kTh'
alias ducks='du -cmxhs * --exclude=/home --exclude=/proc --exclude=/mnt | sort -h'

#Sudo stuff
if [ -x '/usr/bin/sudo' ];then
  alias sudo='sudo -E'
  alias sbash='sudo -E bash'
  export PATH=$PATH:/sbin:/usr/sbin:/usr/local/sbin
fi


alias clean=cleanup_commands

cleanup_commands() {
  echo "Cleaning up docker..."
  docker system prune -af

  echo "Cleaning homebrew..."
  brew cleanup

  echo "Cleaning up brew cask"
  brew cask cleanup

  echo "Cleaninup up AWS ENV"
  unset AWS_DEFAULT_REGION
  unset AWS_SECRET_ACCESS_KEY
  unset AWS_REGION
  unset AWS_ACCESS_KEY_ID
  unset AWS_SESSION_TOKEN

}

# Get colors
get_colors() {
  for i in {0..255}; do
      printf "\x1b[38;5;${i}mcolour${i}\x1b[0m\n"
  done
}

# Git stuff
alias gitlog="git log --pretty='format:%H %G? %GS %GK %aN  %s' --reverse | tail; echo"
gitreleaselog() {
  CURRENT=$(git rev-parse HEAD)
  LAST_TAG=$(git describe --tags --abbrev=0 ${CURRENT}^)
  CHANGELOG=$(git log --pretty='format:%h %s' --reverse $LAST_TAG..HEAD)
  printf "\nChanges since $LAST_TAG:\n\n"
  echo "$CHANGELOG"
}

# Flush DNS Cache on OSX
alias flushdns="sudo killall -HUP mDNSResponder;sudo killall mDNSResponderHelper;sudo dscacheutil -flushcache"

# Weather
alias weather="curl wttr.in/80814?u"
alias weather2="curl wttr.in/80814?format=v2"

# Gist the current dir
alias gist_dir='gist --skip-empty $(ls ./)'

# Get cert info
getCert() {

echo | \
    openssl s_client -servername $1 -connect $1:$2 2>/dev/null | \
    openssl x509 -text
}

precommitinit() {
  cp ~/.pre-commit-config.default.yaml $(git rev-parse --show-toplevel)/.pre-commit-config.yaml
  pre-commit install -f
}

genload() {
  echo "Loading $TARGET"
  k6 run ~/load.js -d 60m --vus 10
}

alias ds_store_clean="find . -name '.DS_Store' -type f -delete"
alias testenv=". ~/.venv/test/bin/activate"

random_word() {
  perl -e '$dict = "/usr/share/dict/words"; $bytes= -s $dict; open IN, $dict;seek(IN,rand($bytes-11),0);$_=<IN>;$_=<IN>;print'
}

newenv() {
  name=$(random_word)
  virtualenv ~/.venv/"$name"
  . ~/.venv/"$name"/bin/activate
}

alias google='googler -n5 --np'

alias tf=terraform

# Asciicast2gif
# https://github.com/asciinema/asciicast2gif
# Pass the ID of an asciinema link to it, and it will output a gif
asciicast2gif() {
  docker run --env DEBUG=1 --rm -v $(pwd):/data asciinema/asciicast2gif https://asciinema.org/a/$1.json /data/$1.gif
}

gitclean(){
  git fetch --prune origin
  git remote prune origin
}

jupyter(){
  if [ $(docker inspect jupyter | jq '.[].State.Running) == "false"') ]; then
    docker start jupyter
    return 0
  fi
  docker run --name jupyter -itd -p 8888:8888 -e JUPYTER_ENABLE_LAB=yes -v /Users/asuderma/jupyter:/home/jovyan/work jupyter/datascience-notebook:7a0c7325e470 start.sh jupyter lab
  sleep 5
  docker logs jupyter
}

function grepfzf () {
    rg -S $1 | fzf
}

lowercase_filenames() {
  for i in *; do git mv $i `echo $i | tr [:upper:] [:lower:]` --force; done
}

# Get Yubikey MFA
mfa() {
  if command -v ykman &> /dev/null; then
    if [ -z "$1" ]; then
      ykman oath accounts code
    else
      ykman oath accounts code | grep -i $1
    fi
  fi
}

export CUDDLEFISH_HOME="$HOME/.cthulhu"
export CUDDLEFISH_VENV="$HOME/.cthulhu/cuddle"
export CUDDLEFISH_PREFER_SSH_GIT=true

if [ -d $CUDDLEFISH_HOME ]; then
  source /Users/asuderma/.cthulhu/config
  source $HOME/repos/github.com/fairwindsops/cuddlefish/workstation/bin/__cuddlectl_complete.bash

  alias ccenv=". ${CUDDLEFISH_VENV}/bin/activate"

  alias ugit="unset GIT_SSH_COMMAND"

  export BE_ANNOYING=true

  source <(cthulhucuddle completion-bash)
  export BASTION_USERNAME=sudermanjr

  function __refresh_vault_aws() {
      if [ "${DOTFILES_LOGLEVEL}" = "debug" ]; then echo "DEBUG: enter __refresh_vault_aws"; fi
      if [ -n "${VAULT_AWS_ROLE}" ] && [ -n "${VAULT_AWS_ACCOUNT}" ]; then
          if [ "${DOTFILES_LOGLEVEL}" = "debug" ]; then echo "DEBUG: checking AWS_SESSION_START duration"; fi
          if [ -z "${AWS_SESSION_START}" ] || [ "$(date +%s)" -gt "$((AWS_SESSION_START + 3600))" ]; then
              if [ "${DOTFILES_LOGLEVEL}" = "debug" ]; then echo "DEBUG: refreshing AWS credentials"; fi
              eval "$(cthulhucuddle vault refresh-aws)"
          fi
      fi
  }
  
  export PROMPT_COMMAND="__refresh_vault_aws"

fi

kepler_details(){
  argo list --no-headers | awk '{print $1}' | xargs -L1 -I{} argo get {} | grep Output\ Param -A6
}

prompt_cuddlefish_vpns_connected () {
    local out
    local num_cuddlefish_vpns="$(find $CUDDLEFISH_HOME/.tmp/vpn -name '*.pid' 2> /dev/null | wc -l | tr -d ' ')"
    if [ -n "$PROJECT" -a -n "$INVENTORY" ]; then
        local num_project_vpns="$(find $CUDDLEFISH_HOME/.tmp/vpn/$PROJECT/$INVENTORY -name '*.pid' 2> /dev/null | wc -l | tr -d ' ')"
    fi
    if [ 0 -lt "$num_cuddlefish_vpns" ]; then
        out=" $num_cuddlefish_vpns"
    fi
    if [ 0 -lt "$num_project_vpns" ]; then
        out="$out:$num_project_vpns"
    fi
    echo -n "$out"
}

insights_run () {
  for cj in $(kubectl -n insights-agent get cj --no-headers | awk '{print $1}'); do
    kubectl -n insights-agent delete job "$cj-manual"
    kubectl -n insights-agent create job "$cj-manual" --from=cj/$cj
  done
}

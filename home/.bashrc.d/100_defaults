SCRIPT_NAME=$(basename ${BASH_SOURCE[0]})
[ $DEBUG_BASHRC ] && echo "$SCRIPT_NAME start"

if type "starship" 2>&1 >/dev/null; then
  [ $DEBUG_BASHRC ] && echo "$SCRIPT_NAME init starship"
  eval "$(starship init bash)"
fi

# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# VSCodium Settings
if [ ! -f "$HOME/Library/Application Support/VSCodium/User/settings.json" ] && [ -f "$HOME/Library/Application Support/" ]; then
  ln -s "$HOME/.vscode-settings.json" "$HOME/Library/Application Support/VSCodium/User/settings.json"
fi

# Update PATH for the Google Cloud SDK.
if [ -f '/Users/asuderma/google-cloud-sdk/path.bash.inc' ]; then . '/Users/asuderma/google-cloud-sdk/path.bash.inc'; fi

# GPG
gpg-connect-agent updatestartuptty /bye > /dev/null
export XDG_CONFIG_HOME=~/Library/Preferences

# Custom stuff
export PATH="$PATH:$HOME/bin"
export EDITOR=vim

if [ -f "$HOME/.cargo/env" ]; then
  source $HOME/.cargo/env
fi

# OSX annoyance
export BASH_SILENCE_DEPRECATION_WARNING=1
